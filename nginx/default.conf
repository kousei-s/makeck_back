map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}


server {
    # HTTPSを利用する設定
    listen       80 ssl;
    # listen       80;
    server_name  localhost;
    # ゲストOS上の証明書とキー配置設定
    ssl_certificate      /etc/nginx/keys/server.crt;
    ssl_certificate_key  /etc/nginx/keys/server.key;
    
    client_max_body_size 10M;

    location /statics/ {
        root /etc/nginx/static/;
    }

    location /auth/ {
        # check http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        proxy_read_timeout 360s;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # enable if you are serving under a subpath location
        rewrite /auth/(.*) /$1  break;

        proxy_pass http://pocketbasec:8080;
    }

    
    location /aiueo/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://aiueo:8090/;   
    }

    
    location /kakikukeko/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://kakikukeko:8090/;   
    }

    # ADDHERE



}